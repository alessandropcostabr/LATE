-- migrations/20250927_initial.sql
-- Sprint 1: Migração SQL neutra (SQLite/PG) com identidade em PG e timestamps padrão.

-- Dica: rode dentro de uma transação quando o driver suportar.
BEGIN;

-- =========
-- TABELA: users
-- =========
CREATE TABLE IF NOT EXISTS users (
  -- IMPORTANTE: em PG, INTEGER PRIMARY KEY sozinho NÃO autoincrementa.
  -- Usamos identidade neutra para PG; em SQLite continua válido.
  id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  name TEXT NOT NULL,
  email TEXT NOT NULL,
  password_hash TEXT NOT NULL,
  role TEXT NOT NULL DEFAULT 'OPERADOR',
  is_active BOOLEAN NOT NULL DEFAULT TRUE,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

  CONSTRAINT users_email_unique UNIQUE (email),
  CONSTRAINT users_role_valid CHECK (role IN ('ADMIN', 'SUPERVISOR', 'OPERADOR', 'LEITOR'))
);

-- Índices auxiliares
CREATE INDEX IF NOT EXISTS idx_users_email ON users (email);
CREATE INDEX IF NOT EXISTS idx_users_role ON users (role);
CREATE INDEX IF NOT EXISTS idx_users_active ON users (is_active);

-- =========
-- TABELA: messages
-- =========
CREATE TABLE IF NOT EXISTS messages (
  id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,

  -- Campos funcionais (mantidos como TEXT para neutralidade entre drivers)
  call_date TEXT,
  call_time TEXT,
  recipient TEXT,
  sender_name TEXT,
  sender_phone TEXT,
  sender_email TEXT,
  subject TEXT,
  message TEXT NOT NULL,

  -- Status alinhado ao que é usado nos testes (pending|in_progress|resolved)
  status TEXT NOT NULL DEFAULT 'pending',
  callback_time TEXT,
  notes TEXT,

  -- Metadados de criação/atualização
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

  -- Validação de status (no SQLite é ignorada, no PG é aplicada)
  CONSTRAINT messages_status_valid CHECK (status IN ('pending','in_progress','resolved'))
);

-- Índices mais úteis para consultas/listagens
CREATE INDEX IF NOT EXISTS idx_messages_status ON messages (status);
CREATE INDEX IF NOT EXISTS idx_messages_created_at ON messages (created_at);
CREATE INDEX IF NOT EXISTS idx_messages_updated_at ON messages (updated_at);

COMMIT;

-- Observações:
-- 1) A cláusula "GENERATED BY DEFAULT AS IDENTITY" garante auto-incremento em PG,
--    mantendo compatibilidade com SQLite. Os modelos podem continuar usando
--    "INSERT ... RETURNING id" sem fornecer 'id' manualmente.
-- 2) CURRENT_TIMESTAMP é suportado por ambos, evitando funções específicas.
-- 3) O CHECK de 'status' não quebra SQLite (é aceito mas pouco restritivo) e
--    aplica validação real em PG.

